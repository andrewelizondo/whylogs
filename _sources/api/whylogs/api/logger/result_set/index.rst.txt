:py:mod:`whylogs.api.logger.result_set`
=======================================

.. py:module:: whylogs.api.logger.result_set


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   whylogs.api.logger.result_set.ResultSet
   whylogs.api.logger.result_set.ProfileResultSet
   whylogs.api.logger.result_set.ViewResultSet
   whylogs.api.logger.result_set.ResultSetWriter
   whylogs.api.logger.result_set.ResultSetReader




.. py:class:: ResultSet

   Bases: :py:obj:`abc.ABC`

   A holder object for profiling results.

   A whylogs.log call can result in more than one profile. This wrapper class
   simplifies the navigation among these profiles.

   Note that currently we only hold one profile but we're planning to add other
   kinds of profiles such as segmented profiles here.

   .. py:method:: read(multi_profile_file: str) -> ResultSet
      :staticmethod:


   .. py:method:: reader(name: str = 'local') -> ResultSetReader
      :staticmethod:


   .. py:method:: writer(name: str = 'local') -> ResultSetWriter


   .. py:method:: view() -> whylogs.core.DatasetProfileView
      :abstractmethod:


   .. py:method:: profile() -> whylogs.core.DatasetProfile
      :abstractmethod:



.. py:class:: ProfileResultSet(profile: whylogs.core.DatasetProfile)

   Bases: :py:obj:`ResultSet`

   A holder object for profiling results.

   A whylogs.log call can result in more than one profile. This wrapper class
   simplifies the navigation among these profiles.

   Note that currently we only hold one profile but we're planning to add other
   kinds of profiles such as segmented profiles here.

   .. py:method:: profile() -> whylogs.core.DatasetProfile


   .. py:method:: view() -> whylogs.core.DatasetProfileView


   .. py:method:: read(multi_profile_file: str) -> ResultSet
      :staticmethod:


   .. py:method:: reader(name: str = 'local') -> ResultSetReader
      :staticmethod:


   .. py:method:: writer(name: str = 'local') -> ResultSetWriter



.. py:class:: ViewResultSet(view: whylogs.core.DatasetProfileView)

   Bases: :py:obj:`ResultSet`

   A holder object for profiling results.

   A whylogs.log call can result in more than one profile. This wrapper class
   simplifies the navigation among these profiles.

   Note that currently we only hold one profile but we're planning to add other
   kinds of profiles such as segmented profiles here.

   .. py:method:: profile() -> whylogs.core.DatasetProfile


   .. py:method:: view() -> whylogs.core.DatasetProfileView


   .. py:method:: read(multi_profile_file: str) -> ResultSet
      :staticmethod:


   .. py:method:: reader(name: str = 'local') -> ResultSetReader
      :staticmethod:


   .. py:method:: writer(name: str = 'local') -> ResultSetWriter



.. py:class:: ResultSetWriter(results: ResultSet, writer: whylogs.api.writer.Writer)

   Result of a logging call.

   A result set might contain one or multiple profiles or profile views.

   .. py:method:: option(**kwargs: Any) -> ResultSetWriter


   .. py:method:: write(**kwargs: Any) -> None



.. py:class:: ResultSetReader(reader: whylogs.api.reader.Reader)

   .. py:method:: option(**kwargs: Any) -> ResultSetReader


   .. py:method:: read(**kwargs: Any) -> ResultSet



